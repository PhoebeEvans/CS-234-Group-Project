/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cs234project;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phoeb
 */
public class materialsGUI extends javax.swing.JFrame {

    private int editRemove;
    private int materialType;
    private String materialFile;
    private String removeMaterialTitle;
    private String editMaterialTitle;
    private int genreNum = 0;
    private String name;
    private String author;
    private String year;
    private String country;
    private String genre;
    private String idFile;
    private String mediaFile;
    private String iD;
    private int copies = 0;
    private String [] columns = {"#", "Title", "Author","Year of Publication", "Country", "Genre", "Id #"}; 
    private String [][] table;
    private String[] arrLine;
    private String oldFilename;
    private String[] nameArr;
    private String[] authorArr;
    private String[] dateArr;
    private String[] countryArr;
    private String[] genreArr; 
    private String[] idArr;
    private String[] tempNameArr;
    private String materialname;
    private int response;
    
    private String search;
    
    
    private DefaultListModel sm = new DefaultListModel();
    private DefaultTableModel model = new DefaultTableModel(table, columns);
    /**
     * Creates new form materialsGUI
     */
    public materialsGUI() throws FileNotFoundException {
        initComponents();
        
        materialType = 1;
        materialType();
        fileArr();
        
        model = new DefaultTableModel(table, columns);
        jTable1.setModel(model);
        jTable2.setModel(model);
        
        
        
        materialMenu();
    }

    public void setmaterialFile(String fileName){
        materialFile = fileName;
    }
    
    public void setmaterialType(int materialType){
        this.materialType = materialType;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fictionNonfictionButtonGroup = new javax.swing.ButtonGroup();
        searchButtonGroup = new javax.swing.ButtonGroup();
        addMaterials = new javax.swing.JPanel();
        addmaterialsMenuTitle = new javax.swing.JLabel();
        materialName = new javax.swing.JLabel();
        materialAuthor = new javax.swing.JLabel();
        materialYear = new javax.swing.JLabel();
        materialCountry = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        genreMaterial = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        nameResponse = new javax.swing.JTextField();
        authorResponse = new javax.swing.JTextField();
        yearResponse = new javax.swing.JTextField();
        countryResponse = new javax.swing.JTextField();
        copiesMaterials = new javax.swing.JLabel();
        copiesCounter = new javax.swing.JSpinner();
        saveAddMaterials = new javax.swing.JButton();
        removeEditMaterials = new javax.swing.JPanel();
        removeEditmaterialsMenuTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        searchMaterials = new javax.swing.JPanel();
        searchmaterialsMenuTitle = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchList = new javax.swing.JList<>();
        titleS = new javax.swing.JRadioButton();
        authorS = new javax.swing.JRadioButton();
        countryS = new javax.swing.JRadioButton();
        genreS = new javax.swing.JRadioButton();
        dateS = new javax.swing.JRadioButton();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewMaterials = new javax.swing.JPanel();
        viewmaterialsMenuTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        materialsMenu = new javax.swing.JPanel();
        materialsMenuTitle = new javax.swing.JLabel();
        addMaterialButton = new javax.swing.JButton();
        removeMaterialButton = new javax.swing.JButton();
        editMaterialButton = new javax.swing.JButton();
        searchMaterialButton = new javax.swing.JButton();
        viewMaterialButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        addMaterialsMenu = new javax.swing.JMenuItem();
        removeMaterialsMenu = new javax.swing.JMenuItem();
        editMaterialsMenu = new javax.swing.JMenuItem();
        searchMaterialsMenu = new javax.swing.JMenuItem();
        viewMaterialsMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        addmaterialsMenuTitle.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        addmaterialsMenuTitle.setText("Add Materials");

        materialName.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        materialName.setText("Enter the Name of the Material");

        materialAuthor.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        materialAuthor.setText("Enter the the of the Author");

        materialYear.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        materialYear.setText("Enter the Year of Publication");

        materialCountry.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        materialCountry.setText("Enter the County of Origin");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        genreMaterial.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        genreMaterial.setText("Is the Material Fiction or Non-Fiction?");

        fictionNonfictionButtonGroup.add(jRadioButton1);
        jRadioButton1.setText("Fiction");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        fictionNonfictionButtonGroup.add(jRadioButton2);
        jRadioButton2.setText("Non-Fiction");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(genreMaterial)
                .addGap(150, 150, 150))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jRadioButton1)
                .addGap(133, 133, 133)
                .addComponent(jRadioButton2)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(genreMaterial)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        nameResponse.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        authorResponse.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        yearResponse.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        countryResponse.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        countryResponse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryResponseActionPerformed(evt);
            }
        });

        copiesMaterials.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        copiesMaterials.setText("How many copies of the material do you have?");

        saveAddMaterials.setText("Save");
        saveAddMaterials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAddMaterialsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addMaterialsLayout = new javax.swing.GroupLayout(addMaterials);
        addMaterials.setLayout(addMaterialsLayout);
        addMaterialsLayout.setHorizontalGroup(
            addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMaterialsLayout.createSequentialGroup()
                .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMaterialsLayout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(addmaterialsMenuTitle))
                    .addGroup(addMaterialsLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addMaterialsLayout.createSequentialGroup()
                                .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(materialName)
                                    .addComponent(materialAuthor, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(materialCountry, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(materialYear, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(nameResponse)
                                    .addComponent(countryResponse, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                                    .addComponent(authorResponse)
                                    .addComponent(yearResponse)))
                            .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addMaterialsLayout.createSequentialGroup()
                                    .addComponent(copiesMaterials)
                                    .addGap(65, 65, 65)
                                    .addComponent(copiesCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(addMaterialsLayout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(saveAddMaterials, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        addMaterialsLayout.setVerticalGroup(
            addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMaterialsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(addmaterialsMenuTitle)
                .addGap(71, 71, 71)
                .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(materialName)
                    .addComponent(nameResponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(materialAuthor)
                    .addComponent(authorResponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(materialYear)
                    .addComponent(yearResponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(materialCountry)
                    .addComponent(countryResponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(addMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiesMaterials)
                    .addComponent(copiesCounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(saveAddMaterials, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        removeEditmaterialsMenuTitle.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        removeEditmaterialsMenuTitle.setText("Remove Materials");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeEditMaterialsLayout = new javax.swing.GroupLayout(removeEditMaterials);
        removeEditMaterials.setLayout(removeEditMaterialsLayout);
        removeEditMaterialsLayout.setHorizontalGroup(
            removeEditMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeEditMaterialsLayout.createSequentialGroup()
                .addGroup(removeEditMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeEditMaterialsLayout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(removeEditmaterialsMenuTitle))
                    .addGroup(removeEditMaterialsLayout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(287, Short.MAX_VALUE))
            .addGroup(removeEditMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(removeEditMaterialsLayout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(60, Short.MAX_VALUE)))
        );
        removeEditMaterialsLayout.setVerticalGroup(
            removeEditMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeEditMaterialsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(removeEditmaterialsMenuTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 563, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
            .addGroup(removeEditMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(removeEditMaterialsLayout.createSequentialGroup()
                    .addGap(150, 150, 150)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(151, Short.MAX_VALUE)))
        );

        searchMaterials.setBackground(new java.awt.Color(204, 255, 255));

        searchmaterialsMenuTitle.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        searchmaterialsMenuTitle.setText("Search Materials");

        searchList.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        searchList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(searchList);

        searchButtonGroup.add(titleS);
        titleS.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        titleS.setText("Title");
        titleS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleSActionPerformed(evt);
            }
        });

        searchButtonGroup.add(authorS);
        authorS.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        authorS.setText("Author");
        authorS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorSActionPerformed(evt);
            }
        });

        searchButtonGroup.add(countryS);
        countryS.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        countryS.setText("Country");
        countryS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countrySActionPerformed(evt);
            }
        });

        searchButtonGroup.add(genreS);
        genreS.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        genreS.setText("Genre");
        genreS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreSActionPerformed(evt);
            }
        });

        searchButtonGroup.add(dateS);
        dateS.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        dateS.setText("Publication Date");
        dateS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateSActionPerformed(evt);
            }
        });

        searchField.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        searchButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        searchButton.setText("GO");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel1.setText("Search");

        javax.swing.GroupLayout searchMaterialsLayout = new javax.swing.GroupLayout(searchMaterials);
        searchMaterials.setLayout(searchMaterialsLayout);
        searchMaterialsLayout.setHorizontalGroup(
            searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchMaterialsLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchMaterialsLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchMaterialsLayout.createSequentialGroup()
                        .addGroup(searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleS)
                            .addComponent(authorS))
                        .addGap(53, 53, 53)
                        .addGroup(searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genreS)
                            .addGroup(searchMaterialsLayout.createSequentialGroup()
                                .addComponent(countryS)
                                .addGroup(searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(searchMaterialsLayout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(searchmaterialsMenuTitle))
                                    .addGroup(searchMaterialsLayout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addComponent(dateS)))))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        searchMaterialsLayout.setVerticalGroup(
            searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchMaterialsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(searchmaterialsMenuTitle)
                .addGap(106, 106, 106)
                .addGroup(searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryS)
                    .addComponent(titleS)
                    .addComponent(dateS))
                .addGap(29, 29, 29)
                .addGroup(searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genreS)
                    .addComponent(authorS))
                .addGap(18, 18, 18)
                .addGroup(searchMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        viewmaterialsMenuTitle.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        viewmaterialsMenuTitle.setText("View Materials");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout viewMaterialsLayout = new javax.swing.GroupLayout(viewMaterials);
        viewMaterials.setLayout(viewMaterialsLayout);
        viewMaterialsLayout.setHorizontalGroup(
            viewMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewMaterialsLayout.createSequentialGroup()
                .addGroup(viewMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewMaterialsLayout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(viewmaterialsMenuTitle))
                    .addGroup(viewMaterialsLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        viewMaterialsLayout.setVerticalGroup(
            viewMaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewMaterialsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(viewmaterialsMenuTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );

        materialsMenuTitle.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        materialsMenuTitle.setText("Materials Menu");

        addMaterialButton.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        addMaterialButton.setText("Add Materials");
        addMaterialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaterialButtonActionPerformed(evt);
            }
        });

        removeMaterialButton.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        removeMaterialButton.setText("Remove Materials");
        removeMaterialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMaterialButtonActionPerformed(evt);
            }
        });

        editMaterialButton.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        editMaterialButton.setText("Edit Materials");
        editMaterialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMaterialButtonActionPerformed(evt);
            }
        });

        searchMaterialButton.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        searchMaterialButton.setText("Search Materials");
        searchMaterialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMaterialButtonActionPerformed(evt);
            }
        });

        viewMaterialButton.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        viewMaterialButton.setText("View Materials");
        viewMaterialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMaterialButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout materialsMenuLayout = new javax.swing.GroupLayout(materialsMenu);
        materialsMenu.setLayout(materialsMenuLayout);
        materialsMenuLayout.setHorizontalGroup(
            materialsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(materialsMenuLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addGroup(materialsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(viewMaterialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchMaterialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(materialsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(removeMaterialButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(materialsMenuTitle)
                        .addComponent(addMaterialButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(editMaterialButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(303, Short.MAX_VALUE))
        );
        materialsMenuLayout.setVerticalGroup(
            materialsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(materialsMenuLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(materialsMenuTitle)
                .addGap(81, 81, 81)
                .addComponent(addMaterialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(removeMaterialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(editMaterialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(searchMaterialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(viewMaterialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        jMenu1.setText("Materials Menu");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });

        addMaterialsMenu.setText("Add Materials");
        addMaterialsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaterialsMenuActionPerformed(evt);
            }
        });
        jMenu1.add(addMaterialsMenu);

        removeMaterialsMenu.setText("Remove Materials");
        removeMaterialsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMaterialsMenuActionPerformed(evt);
            }
        });
        jMenu1.add(removeMaterialsMenu);

        editMaterialsMenu.setText("Edit Materials");
        editMaterialsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMaterialsMenuActionPerformed(evt);
            }
        });
        jMenu1.add(editMaterialsMenu);

        searchMaterialsMenu.setText("Search Materials");
        searchMaterialsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMaterialsMenuActionPerformed(evt);
            }
        });
        jMenu1.add(searchMaterialsMenu);

        viewMaterialsMenu.setText("View Materials");
        viewMaterialsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMaterialsMenuActionPerformed(evt);
            }
        });
        jMenu1.add(viewMaterialsMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(materialsMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(addMaterials, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeEditMaterials, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(searchMaterials, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(viewMaterials, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(materialsMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(addMaterials, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeEditMaterials, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(searchMaterials, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(viewMaterials, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removeMaterialsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMaterialsMenuActionPerformed
        try {
            // TODO add your handling code here:
            removeMaterialMenu();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeMaterialsMenuActionPerformed

    private void addMaterialsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaterialsMenuActionPerformed
        // TODO add your handling code here:
        addMaterialMenu();
    }//GEN-LAST:event_addMaterialsMenuActionPerformed

    private void editMaterialsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMaterialsMenuActionPerformed
        try {
            // TODO add your handling code here:
            editMaterialMenu();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editMaterialsMenuActionPerformed

    private void searchMaterialsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMaterialsMenuActionPerformed
        // TODO add your handling code here:
        searchMaterialMenu();
    }//GEN-LAST:event_searchMaterialsMenuActionPerformed

    private void viewMaterialsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMaterialsMenuActionPerformed
        try {
            // TODO add your handling code here:
            viewMaterial();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewMaterialsMenuActionPerformed

    private void countryResponseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryResponseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryResponseActionPerformed

    private void addMaterialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaterialButtonActionPerformed
        // TODO add your handling code here:
        addMaterialMenu();
    }//GEN-LAST:event_addMaterialButtonActionPerformed

    private void removeMaterialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMaterialButtonActionPerformed
        try {
            // TODO add your handling code here:
            removeMaterialMenu();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeMaterialButtonActionPerformed

    private void editMaterialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMaterialButtonActionPerformed
        try {
            // TODO add your handling code here:
            editMaterialMenu();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editMaterialButtonActionPerformed

    private void searchMaterialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMaterialButtonActionPerformed
        // TODO add your handling code here:
        searchMaterialMenu();
    }//GEN-LAST:event_searchMaterialButtonActionPerformed

    private void viewMaterialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMaterialButtonActionPerformed
        try {
            // TODO add your handling code here:
            viewMaterial();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewMaterialButtonActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        materialMenu();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void saveAddMaterialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAddMaterialsActionPerformed
        // TODO add your handling code here:
        
        copies = (int) copiesCounter.getValue();
        if(nameResponse.getText().isEmpty() || authorResponse.getText().isEmpty() || yearResponse.getText().isEmpty() || countryResponse.getText().isEmpty() || genreNum == 0){
            new error().setVisible(true);
            genreNum = 0;
        }
        
        else if(0 >= copies){
            new error().setVisible(true);
        }
        
        else{
            name = nameResponse.getText();
            author = authorResponse.getText();
            year = yearResponse.getText();
            country = countryResponse.getText();
            if(genreNum == 1){
                genre = "fiction";
            }
            
            else if(genreNum == 2){
                genre = "nonfiction";
            }
            
            //reset fields
            nameResponse.setText("");
            authorResponse.setText("");
            yearResponse.setText("");
            countryResponse.setText("");
            
            try {
                addMaterials();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_saveAddMaterialsActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        genreNum = 1;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        genreNum = 2;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tb1Model = (DefaultTableModel)jTable2.getModel();
        
        int cValue = jTable2.getSelectedColumn();
        String selection = (String) tb1Model.getValueAt(jTable2.getSelectedRow(), cValue);
        //System.out.println(selection);
        
        String n = (String)tb1Model.getValueAt(jTable2.getSelectedRow(),0);
        ///System.out.println(n);
        int numb = Integer.parseInt(n);
        
        if(editRemove == 0){
            editMaterialWindow editW = new editMaterialWindow(materialname, materialType, materialFile, cValue, selection, numb);
            if(cValue == 0 || cValue == 5 || cValue == 6){
                //System.out.println("error");
                //NEED TO MAKE ERROR WINDOW
                //Need to add genre change
            }

            else{
                editW.editMwindow(materialname, materialType, materialFile, cValue, selection, numb);
            }
        }
        
        else if(editRemove == 1){
            //remove
            removeMaterialWindow removeW;
            try {
                removeW = new removeMaterialWindow(materialname, materialType, materialFile, numb);
                removeW.removeMwindow(materialname, materialType, materialFile, numb);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NewGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }  
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            fileArr();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        model = new DefaultTableModel(table, columns);
        jTable2.setModel(model);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void authorSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorSActionPerformed
        // TODO add your handling code here:
        response = 2;
    }//GEN-LAST:event_authorSActionPerformed

    private void titleSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleSActionPerformed
        // TODO add your handling code here:
        response = 1;
    }//GEN-LAST:event_titleSActionPerformed

    private void dateSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateSActionPerformed
        // TODO add your handling code here:
        response = 3;
    }//GEN-LAST:event_dateSActionPerformed

    private void countrySActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countrySActionPerformed
        // TODO add your handling code here:
        response = 4;
    }//GEN-LAST:event_countrySActionPerformed

    private void genreSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreSActionPerformed
        // TODO add your handling code here:
        response = 5;
    }//GEN-LAST:event_genreSActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        search = searchField.getText();
        try {
            // TODO add your handling code here:

            searchMaterials();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    public void addMaterials() throws FileNotFoundException{
        //people.txt and temp.txt are opened
        File inputFile = new File(materialFile);
        Scanner in = new Scanner(inputFile);
        PrintWriter out = new PrintWriter("temp.txt");
        
      
        int rnum = 1;
        //read the input and write the output
        while(in.hasNextLine()){
            //replace all of the existing users
            out.println(in.nextLine());
            
            //increment rnum 
            rnum ++;
        }
        
        
        if(materialType == 1){
            idFile = "idList3.txt";
            
        }
        
        else if(materialType == 2){
            idFile = "idList1.txt";
        }
        
        idCreate create = new idCreate();
        iD = create.idCreate("000", idFile);
        
        
        Files replace = new Files( "temp2.txt" , idFile);
        replace.fileReplace();
        
        
        //print new user's information to temp.txt 
        out.println(rnum +  " ~ " + name + " ~ " + author + " ~ " + year + " ~ " + country + " ~ " + genre + " ~ " + iD);
        
        //close both files so they are not cleared. 
        in.close();
        out.close();
        
        Files replace2 = new Files( "temp.txt" , materialFile);
        replace2.fileReplace();
        
        //creates file for movie. 
        
        mediaFile = name + year + "Id" + iD; 
        //Trims whitespace and characters other than letters and numbers
        String rePlace = mediaFile.replaceAll("[^a-zA-Z0-9]", "");
        mediaFile = rePlace; 
        String tempString = mediaFile + ".txt";
        mediaFile = tempString;
        
        //Creates file with fileCreate 
        Files createN = new Files(mediaFile);
        createN.fileCreate();
        
        copies(mediaFile);
        
    }
    
    public void copies(String fileName) throws FileNotFoundException{
       
        
        //people.txt and temp.txt are opened
        File inputFile = new File(fileName);
        Scanner in = new Scanner(inputFile);
        PrintWriter out = new PrintWriter("temp.txt");
        
      
        int rnum = 1;
        while(rnum <= copies){
            out.println(fileName + " ~ 0 ~ avalible");
            rnum++;
        }
        
        //close both files so they are not cleared. 
        in.close();
        out.close();
        
        Files replace = new Files( "temp.txt" , fileName);
        replace.fileReplace();
        
    }
    
    public void searchMaterialMenu(){
        addMaterials.setVisible(false);
        materialsMenu.setVisible(false);
        removeEditMaterials.setVisible(false);
        //patronsTable.setVisible(false);
        viewMaterials.setVisible(false);
        searchMaterials.setVisible(true);
        
    }
    public void addMaterialMenu(){
        addMaterials.setVisible(true);
        materialsMenu.setVisible(false);
        removeEditMaterials.setVisible(false);
        //patronsTable.setVisible(false);
        viewMaterials.setVisible(false);
        searchMaterials.setVisible(false);
    }
    
    public void editMaterialMenu() throws FileNotFoundException{
        fileArr();
        model = new DefaultTableModel(table, columns);
        jTable2.setModel(model);
        
        removeEditmaterialsMenuTitle.setText(editMaterialTitle);
        //editRemoveinstruct.setText("Click on the part of Patron You wish to edit. ");
        
        editRemove = 0;
        addMaterials.setVisible(false);
        materialsMenu.setVisible(false);
        removeEditMaterials.setVisible(true);
        //patronsTable.setVisible(true);
        viewMaterials.setVisible(false);
        searchMaterials.setVisible(false);
    }
    
    public void removeMaterialMenu() throws FileNotFoundException{
        fileArr();
        model = new DefaultTableModel(table, columns);
        jTable2.setModel(model);
        
        removeEditmaterialsMenuTitle.setText(removeMaterialTitle);
        //editRemoveinstruct.setText("Click on the Patron You wish to remove. ");
        
        editRemove = 1;
        
        addMaterials.setVisible(false);
        materialsMenu.setVisible(false);
        removeEditMaterials.setVisible(true);
        //patronsTable.setVisible(true);
        viewMaterials.setVisible(false);
        searchMaterials.setVisible(false);
    }
    
    public void materialMenu(){
        addMaterials.setVisible(false);
        materialsMenu.setVisible(true);
        removeEditMaterials.setVisible(false);
        //patronsTable.setVisible(false);
        viewMaterials.setVisible(false);
        searchMaterials.setVisible(false);
    }
    
    public void viewMaterial() throws FileNotFoundException{
        fileArr();
        model = new DefaultTableModel(table, columns);
        jTable1.setModel(model);
        
        
        
        addMaterials.setVisible(false);
        materialsMenu.setVisible(false);
        removeEditMaterials.setVisible(false);
        //patronsTable.setVisible(false); 
        viewMaterials.setVisible(true);
        searchMaterials.setVisible(false);
    }
    
    public void fileArr() throws FileNotFoundException{
        File viewFile = new File(materialFile);
        Scanner in = new Scanner(viewFile);
        
        int value = 1000;
        
        int rnum = 0;
        
        nameArr = new String[value];
        authorArr = new String[value];
        dateArr = new String[value];
        countryArr = new String[value];
        genreArr = new String[value];
        idArr = new String[value];
        arrLine = new String[7];        
                
        while(in.hasNextLine()){
            String lineChange = in.nextLine();
            
            arrLine = lineChange.split("~");
            
            nameArr[rnum] = arrLine[1];
            authorArr[rnum] = arrLine[2];
            dateArr[rnum] = arrLine[3];
            countryArr[rnum] = arrLine[4];
            genreArr[rnum] = arrLine[5];
            idArr[rnum] = arrLine[6];
            
            rnum++;
        }
        
        table = new String[rnum][7];
        int count = 0;
        while(count < rnum){
            table[count][0] = Integer.toString(count+1);
            table[count][1] = nameArr[count];
            table[count][2] = authorArr[count];
            table[count][3] = dateArr[count];
            table[count][4] = countryArr[count];
            table[count][5] = genreArr[count];
            table[count][6] = idArr[count];
            count++;
        }
        
    }
    
    public void searchMaterials() throws FileNotFoundException{
        int rnum = 0;
        
        File inputFile = new File(materialFile);
        Scanner in = new Scanner(inputFile);
        
        int value = 1000;
        
        nameArr = new String[value];
        authorArr = new String[value];
        dateArr = new String[value];
        countryArr = new String[value];
        genreArr = new String[value];
        idArr = new String[value];
        arrLine = new String[7]; 
        tempNameArr = new String[1];
        
        while(in.hasNextLine()){
            String lineChange = in.nextLine();
            
            arrLine = lineChange.split("~");
            
            nameArr[rnum] = arrLine[1];
            authorArr[rnum] = arrLine[2];
            dateArr[rnum] = arrLine[3];
            countryArr[rnum] = arrLine[4];
            genreArr[rnum] = arrLine[5];
            idArr[rnum] = arrLine[6];
            
            rnum++;
        }
        
        searchList.setModel(sm);
        
        //director searcher
            if(response == 1){
                
                String resp = search;
                
                String split[] = resp.split(" ", 0);
                for(String resp1: split){
                
                    String temp1 = resp1.toLowerCase();
                    resp1 = temp1;

                    temp1 = resp1.replaceAll("^a-z0-9", "");
                    resp1 = temp1; 

                    //System.out.println("in " + resp2);
                    
                    int numb = 1;
                    int count = 0;

                    while(count < rnum){

                        tempNameArr[0] = nameArr[count];

                        String directorNew = Arrays.toString(tempNameArr);
                        
                        String spliter[] = directorNew.split(" ", 0);
                        
                        for(String dNew: spliter){
                            String temp;

                            temp = dNew.toLowerCase();
                            dNew = temp; 

                            //non letters and spaces remove
                            temp = dNew.replaceAll("[^a-z0-9]", "");
                            dNew = temp;
                            //System.out.println("arr " + dNew);

                            if(resp1.equals(dNew)){
                                sm.addElement(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                                //loans.println(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                                numb++;
                            }
                            
                        
                        }
                        count++;
                    }
                
                }
                
                 
            }

            //director searcher
            if(response == 2){
                
                String resp = search;
                
                String split[] = resp.split(" ", 0);
                for(String resp2: split){
                
                    String temp2 = resp2.toLowerCase();
                    resp2 = temp2;

                    temp2 = resp2.replaceAll("^a-z0-9", "");
                    resp2 = temp2; 

                    //System.out.println("in " + resp2);
                    
                    int numb = 1;
                    int count = 0;

                    while(count < rnum){

                        tempNameArr[0] = authorArr[count];

                        String directorNew = Arrays.toString(tempNameArr);
                        
                        String spliter[] = directorNew.split(" ", 0);
                        
                        for(String dNew: spliter){
                            String temp;

                            temp = dNew.toLowerCase();
                            dNew = temp; 

                            //non letters and spaces remove
                            temp = dNew.replaceAll("[^a-z0-9]", "");
                            dNew = temp;
                            //System.out.println("arr " + dNew);

                            if(resp2.equals(dNew)){
                                sm.addElement(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                                //loans.println(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                                numb++;
                            }
                            
                        
                        }
                        count++;
                    }
                
                }
                
                 
            }
            
            //age searcher
            if(response == 3){
                
                int ageInt = Integer.parseInt(search);
                int count = 0;
                int numb = 1;
                
                while(count  < rnum){
                    
                    tempNameArr[0] = dateArr[count];

                    String dateNew = Arrays.toString(tempNameArr);
                    String temp;
                    temp = dateNew.replaceAll("[^0-9]", "");
                    dateNew = temp;
                    
                    int intAge = Integer.parseInt(dateNew);

                    if(ageInt == intAge){
                        sm.addElement(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                        //loans.println(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                        numb++;
                    }
                    count++;

                }
                
                
                
            }
            
            //country searcher
            
            if(response == 4){
                String resp = search;
                
                String split[] = resp.split(" ", 0);
                for(String resp4: split){
                
                    String temp4 = resp4.toLowerCase();
                    resp4 = temp4;

                    temp4 = resp4.replaceAll("^a-z0-9", "");
                    resp4 = temp4; 

                    //System.out.println("in " + resp2);
                    
                    int numb = 1;
                    int count = 0;

                    while(count < rnum){

                        tempNameArr[0] = countryArr[count];

                        String directorNew = Arrays.toString(tempNameArr);
                        
                        String spliter[] = directorNew.split(" ", 0);
                        
                        for(String cNew: spliter){
                            String temp;

                            temp = cNew.toLowerCase();
                            cNew = temp; 

                            //non letters and spaces remove
                            temp = cNew.replaceAll("[^a-z0-9]", "");
                            cNew = temp;
                            //System.out.println("arr " + dNew);

                            if(resp4.equals(cNew)){
                                sm.addElement(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                                //loans.println(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                                numb++;
                            }
                            
                        
                        }
                        count++;
                    }
                
                }
            
            }
            //genre searcher
            //director searcher
            if(response == 5){
                
                String respG = search;
                
                String split5[] = respG.split(" ", 0);
                for(String resp5: split5){
                
                    String temp5 = resp5.toLowerCase();
                    resp5 = temp5;

                    temp5 = resp5.replaceAll("^a-z0-9", "");
                    resp5 = temp5; 

                    //System.out.println("in " + resp2);
                    
                    int numb = 1;
                    int count = 0;

                    while(count < rnum){

                        tempNameArr[0] = genreArr[count];

                        String directorNew = Arrays.toString(tempNameArr);
                        
                        String spliter[] = directorNew.split(" ", 0);
                        
                        for(String gNew: spliter){
                            String temp;

                            temp = gNew.toLowerCase();
                            gNew = temp; 

                            //non letters and spaces remove
                            temp = gNew.replaceAll("[^a-z0-9]", "");
                            gNew = temp;
                            //System.out.println("arr " + dNew);

                            if(resp5.equals(gNew)){
                                sm.addElement(numb + " ~ " + nameArr[count] + " ~ " + authorArr[count] + " ~ " + dateArr[count] + " ~ " + countryArr[count] + " ~ " + genreArr[count] + " ~ " + idArr[count]);
                                
                                numb++;
                            }
                            
                        
                        }
                        count++;
                    }
                }
            }
            
        
     in.close();
    }
    
    
    public void materialType(){
        if(materialType == 1){
            //Book
            materialname = "Books";
            //materialFile
            materialFile = "BooksList.txt";
            
            //books menu
            materialsMenuTitle.setText("Books Menu");
            addMaterialButton.setText("Add Books");
            removeMaterialButton.setText("Remove Books");
            editMaterialButton.setText("Edit Books");
            searchMaterialButton.setText("Search Books");
            viewMaterialButton.setText("View Books");
            
            //add books
            addmaterialsMenuTitle.setText("Add Books");
            materialName.setText("Enter the name of the Book.");
            materialAuthor.setText("Enter the author of the Book.");
            materialYear.setText("Enter the year of publication.");
            materialCountry.setText("Enter the Country of Origin.");
            copiesMaterials.setText("How many copies of the book do you have?");
            genreMaterial.setText("Is the Book Fiction or Non-Fiction?");
            
            //remove books
            removeMaterialTitle = "Remove Books";
            //edit books
            editMaterialTitle = "Edit Books";
            //search books
            
            //view books
            viewmaterialsMenuTitle.setText("View Books");
            
            //table
            columns[2] = "Author"; 
            
            //search
            searchmaterialsMenuTitle.setText("Search Books");
            authorS.setText("Author");
        }
        
        else if(materialType ==2){
            //Movie
            materialname = "Movies";
            //materialFile
            materialFile = "MoviesList.txt";
            
            //movies menu
            materialsMenuTitle.setText("Movies Menu");
            addMaterialButton.setText("Add Movies");
            removeMaterialButton.setText("Remove Movies");
            editMaterialButton.setText("Edit Movies");
            searchMaterialButton.setText("Search Movies");
            viewMaterialButton.setText("View Movies");
            
            
            //add movies
            addmaterialsMenuTitle.setText("Add Movies");
            materialName.setText("Enter the name of the Movies.");
            materialAuthor.setText("Enter the director of the Movies.");
            materialYear.setText("Enter the year of publication.");
            materialCountry.setText("Enter the Country of Origin.");
            copiesMaterials.setText("How many copies of the movie do you have?");
            genreMaterial.setText("Is the Movie Fiction or Non-Fiction?");
            
            //remove movies
            removeMaterialTitle = "Remove Movies";
            //edit movies
            editMaterialTitle = "Edit Movies";
            
            //view books
            viewmaterialsMenuTitle.setText("View Movies");
            
            //table
            columns[2] = "Director"; 
            
            //search
            searchmaterialsMenuTitle.setText("Search Moviess");
            authorS.setText("Director");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(materialsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(materialsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(materialsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(materialsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new materialsGUI().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(materialsGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMaterialButton;
    private javax.swing.JPanel addMaterials;
    private javax.swing.JMenuItem addMaterialsMenu;
    private javax.swing.JLabel addmaterialsMenuTitle;
    private javax.swing.JTextField authorResponse;
    private javax.swing.JRadioButton authorS;
    private javax.swing.JSpinner copiesCounter;
    private javax.swing.JLabel copiesMaterials;
    private javax.swing.JTextField countryResponse;
    private javax.swing.JRadioButton countryS;
    private javax.swing.JRadioButton dateS;
    private javax.swing.JButton editMaterialButton;
    private javax.swing.JMenuItem editMaterialsMenu;
    private javax.swing.ButtonGroup fictionNonfictionButtonGroup;
    private javax.swing.JLabel genreMaterial;
    private javax.swing.JRadioButton genreS;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel materialAuthor;
    private javax.swing.JLabel materialCountry;
    private javax.swing.JLabel materialName;
    private javax.swing.JLabel materialYear;
    private javax.swing.JPanel materialsMenu;
    private javax.swing.JLabel materialsMenuTitle;
    private javax.swing.JTextField nameResponse;
    private javax.swing.JPanel removeEditMaterials;
    private javax.swing.JLabel removeEditmaterialsMenuTitle;
    private javax.swing.JButton removeMaterialButton;
    private javax.swing.JMenuItem removeMaterialsMenu;
    private javax.swing.JButton saveAddMaterials;
    private javax.swing.JButton searchButton;
    private javax.swing.ButtonGroup searchButtonGroup;
    private javax.swing.JTextField searchField;
    private javax.swing.JList<String> searchList;
    private javax.swing.JButton searchMaterialButton;
    private javax.swing.JPanel searchMaterials;
    private javax.swing.JMenuItem searchMaterialsMenu;
    private javax.swing.JLabel searchmaterialsMenuTitle;
    private javax.swing.JRadioButton titleS;
    private javax.swing.JButton viewMaterialButton;
    private javax.swing.JPanel viewMaterials;
    private javax.swing.JMenuItem viewMaterialsMenu;
    private javax.swing.JLabel viewmaterialsMenuTitle;
    private javax.swing.JTextField yearResponse;
    // End of variables declaration//GEN-END:variables
}
